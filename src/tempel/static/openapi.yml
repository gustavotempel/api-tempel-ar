swagger: "2.0"
info:
  version: "1.0.0"
  title: "Products"
basePath: "/api/v1"
tags:
  - name: "product"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /product/{product_id}:
    get:
      tags:
        - "product"
      summary: "Get a product in the store"
      operationId: "get_product"
      parameters:
        - name: "product_id"
          in: "path"
          description: "The id of the product to retrieve"
          required: true
          type: "string"
      responses:
        200:
          description: "Successfully retrived product"
          schema:
            $ref: "#/definitions/Product"
        404:
          description: "Product doesn't exist"
      x-swagger-router-controller: "test_api.web.controllers.products_controller"
    delete:
      tags:
        - "product"
      summary: "Remove a product in the store"
      operationId: "remove_product"
      parameters:
        - name: "product_id"
          in: "path"
          description: "The id of the product to remove from the store"
          required: true
          type: "string"
      responses:
        202:
          description: "Successfully deleted product"
        404:
          description: "Product doesn't exist"
      x-swagger-router-controller: "test_api.web.controllers.products_controller"
    put:
      tags:
        - "product"
      summary: "Update and replace a product in the store"
      operationId: "update_product"
      parameters:
        - name: "product_id"
          in: "path"
          description: "The id of the product to update from the store"
          required: true
          type: "string"
        - name: "Product"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: "Successfully updated product"
        404:
          description: "Product doesn't exist"
      x-swagger-router-controller: "test_api.web.controllers.products_controller"
  /product:
    get:
      tags:
        - "product"
      summary: "Gets all products in the store"
      operationId: "get_all_products"
      responses:
        200:
          description: "Successfully received all products."
          schema:
            $ref: "#/definitions/Product"
      x-swagger-router-controller: "test_api.web.controllers.products_controller"
    post:
      tags:
        - "product"
      summary: "Add a new product to the store"
      operationId: "add_product"
      parameters:
        - in: "body"
          name: "body"
          description: "Product to add to the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        201:
          description: "Product added"
      x-swagger-router-controller: "test_api.web.controllers.products_controller"

definitions:
  Products:
    type: array
    items:
      $ref: "#/definitions/Product"
  Product:
    type: "object"
    required:
      - "name"
      - "price"
      - "url"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      price:
        type: "number"
        format: "float"
      url:
        type: "string"
    example:
      id: 1
      name: "sample_product"
      price: 100.00
      url: "http://sample_image.com"